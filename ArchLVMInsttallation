### Arch LVM Installation Without Encryption ###

@Author
RAHUL SARKAR

#########################################################################################################################

Considerations:

1. Partitions -  Separate And Independent Partitions /, /home, /var, /boot, /efi and swap.
2. 

#########################################################################################################################

# Connect Wifi with 'iwctl'

-> iwctl
-> device list
-> station [interface name - "wlan0"] scan
-> station [interface name - "wlan0"] get-networks
-> station [interface name - "wlan0"] connect SSID
-> exit

### Disk Preparation Using 'cgdisk' utility ###

-> Delete Existing Partition Scheme
-> cfdisk /dev/sda or nvme0n1

EFI Partition (fat32) Code ef00
Boot Partition Code (Linux Filesystem) 8300
LVM Partition Code (LVM) 8e00

-> Create Partitions As Per The cgdisk instructions

[ FORMAT ALL PARTITIONS ]

-> mkfs.fat -F32 /dev/(sda1 or nvme0n1p1)
-> mkfs.ext4 /dev/(sda2 or nvme0n1p2)
-> mkfs.ext4 /dev/(sda3 or nvme0n1p3)
-> mkswap /dev/'archvolgrp0'/lv_swap
-> mkfs.ext4 /dev/'archvolgrp0'/lv_var
-> mkfs.ext4 /dev/'archvolgrp0'/lv_root
-> mkfs.ext4 /dev/'archvolgrp0'/lv_home

[ CREATE PHYSICAL VOLUME, VOLUMEGROUP AND LOGICAL VOLUME ]

-> pvcreate --dataalignment 1m /dev/(sda3 or nvme0n1p3)
-> vgcreate 'archvolgrp0' /dev/(sda3 or nvme0n1p3)

-> lvcreate -L 10G 'archvolgrp0' -n lv_swap // For Swap Partition
-> lvcreate -L 16G 'archvolgrp0' -n lv_var  // For Var Partition
-> lvcreate -L 70G 'archvolgrp0' -n lv_root // For Root Partition
-> lvcreate -l 100%FREE 'archvolgrp0' -n lv_home  // For Home Partition

[ ACTIVATE/VERIFY VOLUMES ]

-> modprobe dm_mod
-> vgscan
-> vgchange -ay

[ CREATE DIRECTORIES FOR MOUNTING]

-> mkdir /mnt/boot
-> mkdir /mnt/boot/efi
-> mkdir /mnt/var
-> mkdir /mnt/home
-> mkdir /mnt/etc

-> mount /dev/'archvolgrp0'/lv_root /mnt // Mounting Root Partition
-> mount /dev/'archvolgrp0'/lv_var   /mnt/var  //Mounting Var Partition
-> mount /dev/'archvolgrp0'/lv_home  /mnt/home //Mounting Home Partition
-> swapon /dev/'archvolgrp0'/lv_swap // Mounting Swap Partition

-> mount /dev/(sda2 or nvme0n1p2) /mnt/boot
-> mount /dev/(sda1 or nvme0n1p1 /mni/boot/efi

-> Check 'lsblk' if all partitions are mounted

[ GENERATE FSTAB FILE ]

-> genfstab -U -p /mnt >> /mnt/etc/fstab
-> Verify Fstab by 'cat /mnt/etc/fstab'


# [INSTALLATION OF BASE PACKAGES]

pacstrap -i /mnt base base-devel



### ARCH CHROOT INTO SYSTEM ###

-> arch-chroot /mnt


# [INSTALLING CORE OS PACKAGES - NON-GUI Components]

-> pacman -S linux-lts linux-lts-headers linux-firmware intel-ucode ufw apparmor lvm2 nano bash-completion networkmanager wpa_supplicant wireless_tools dialog


[ ENABLE 'NetworkManager']

-> systemctl enable NetworkManager


[CONFIGURE MKINITCPIO FOR LVM INCLUSION]

-> Open file using text editor /etc/mkinitcpio.conf
-> Add 'lvm2' on the HOOKS line between 'block' and 'filesystems'
-> eg : HOOKS=(base udev autodetect modconf block lvm2 filesystems keyboard fsck )

-> mkinitcpio -p linux-lts


[LOCALE CONFIGURATIONS]

-> Open /etc/locale.gen using text editor
-> Uncomment Line: en_US.UTF-8 UTF-8
-> Uncomment Line: en_US ISO-8859-1

-> locale-gen


[ SYSTEM TIMEZONE CONFIGURATIONS ]

-> Check Available Timezones
-> timedatectl list-timezones (eg - Asia/Kolkata)
-> timedatectl set-timezone Asia/Kolkata
-> systemctl enable systemd-timesyncd

[ SET SYSTEM HOSTNAME HOSTS CONFIGURATIONS ]

-> hostnamectlset-hostname 'host_name'
-> Verify using command hostnamectl and check 'Static hostname:' in the Terminal OR  Check For Hostname using 'cat /etc/hostname'
-> Open file /etc/hosts using Text Editor And Append Lines
-> 127.0.0.1  localhost
   127.0.1.1  'host_name'

[USERS AND PASSWORD CONFIGURATIONS]

-> passwd root  //Set Root User Password

-> Create Non-Root User
-> useradd -m -g users -G wheel 'username'

-> Set Password For Newly Created Non-Root User
-> passwd 'username'

-> Give Non-Root User Sudo Privilages 
-> Open /etc/sudoers using text editors
-> Uncomment Line: wheel ALL=(ALL:ALL) ALL  //Below The Line root ALL=(ALL:ALL) ALL


[MAKE SYSTEM BOOTABLE USING GRUB CONFIGURATIONS]

-> pacman -S grub efibootmgr dosfstools os-prober mtools

-> grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck

-> cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

-> grub-mkconfig -o /boot/grub/grub.cfg


[ IMPORTANT PACKAGES TO INSTALL TO PREPARE FOR GUI INSTALLATION]

pacman -S xorg xorg-server mesa



### UNMOUNT CHROOT SYSTEM AND REBOOT

-> exit
-> umount -a
-> reboot
